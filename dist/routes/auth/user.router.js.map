{"version":3,"file":"user.router.js","sourceRoot":"/","sources":["routes/auth/user.router.ts"],"names":[],"mappings":";;;AAAA,8DAAqD;AACrD,gFAAmD;AACnD,uCAAwC;AACxC,0EAA0C;AAE1C,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAC,iBAAU,EAAC,CAAO,GAA4B,EAAE,GAAa,EAAE,EAAE;IAChF,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,OAAO,CAAC,EAAC,GAAG,EAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAC,CAAC,CAAA;IACnD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AAC5B,CAAC,CAAA,CAAC,CAAA;AAEF,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAC,iBAAU,EAAC,CAAO,CAAK,EAAE,GAAa,EAAE,EAAE;IAC5D,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,IAAI,EAAE,CAAA;IAC9B,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AAC5B,CAAC,CAAA,CAAC,CAAA;AAEF,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE;IAC3D,MAAM,IAAI,GAAG,MAAM,kBAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;IACzE,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;AAC1C,CAAC,CAAA,CAAC,CAAC;AAEH,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAM,GAAY,EAAE,GAAa,EAAE,EAAE;IACvD,MAAM,IAAI,GAAG,MAAM,kBAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;IACtE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/B,CAAC,CAAA,CAAC,CAAC;AAGH,MAAM,CAAC,MAAM,CAAC,aAAa,EAAC,iBAAU,EAAE,CAAM,GAA4B,EAAE,GAAa,EAAE,EAAE;IACzF,MAAM,kBAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;AAC9D,CAAC,CAAA,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAC","sourcesContent":["import express, { Request, Response } from 'express';\nimport setContext from '../../middlewares/context';\nimport { appContext} from '../../start';\nimport User from '../../models/user/user';\n\nconst router = express.Router();\n\nrouter.get('/me',setContext,async (req: Request & { user: any }, res: Response) => {\n  const user = await User.findOne({_id:req.user._id})\n  res.status(200).json(user)\n})\n\nrouter.get('/users',setContext,async (_:any, res: Response) => {\n  const user = await User.find()\n  res.status(200).json(user)\n})\n\nrouter.post('/register', async (req: Request, res: Response) => {\n    const user = await appContext.services.UserService.registerUser(req,res);\n    return res.status(201).json({ user });\n});\n\nrouter.post('/login', async(req: Request, res: Response) => {\n    const user = await appContext.services.UserService.loginUser(req,res);\n    res.status(200).json(user);\n});\n\n\nrouter.delete('/deleteuser',setContext, async(req: Request & { user: any }, res: Response) => {\n    await appContext.services.UserService.deleteUser(req,res);\n});\n\nexport default router;\n"]}